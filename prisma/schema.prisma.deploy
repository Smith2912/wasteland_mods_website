// This is a deployment-specific Prisma schema file
// Used only for generating the client without database connection

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

// No datasource section to avoid connection attempts

// Models definitions match the main schema
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  steamId           String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  steamId       String?   @unique
  accounts      Account[]
  sessions      Session[]
  purchases     Purchase[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Mod {
  id          String    @id @default(cuid())
  title       String
  description String
  price       Float
  imageUrl    String?
  category    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  purchases   Purchase[]
}

model Purchase {
  id          String    @id @default(cuid())
  userId      String
  modId       String
  purchaseDate DateTime  @default(now())
  active      Boolean    @default(true)
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  mod         Mod        @relation(fields: [modId], references: [id], onDelete: Cascade)

  @@unique([userId, modId])
} 